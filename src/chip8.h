#pragma once

#include <cstdint>
#include <stack>
#include <random>
#include <string>
#include <deque>

class CHIP8 {

	using BYTE = uint8_t;
	using WORD = uint16_t;

public:

	/*
	CHIP-8 Memory Map:
		000 - 04F	Empty space
		050 - 09F	Font data
		100 - 1FF	Empty space
		200 - FFF	CHIP-8 Game
	*/
	BYTE RAM[4096];

	bool display[32][64];

	WORD PC; // program counter

	WORD I; // index register

	std::stack<WORD> stack;

	BYTE DT;

	BYTE ST;

	BYTE V[16]; // variable registers 0 - F

	std::deque<std::string> instructionList;
	bool keyStates[16];

	/*

	Example of how a character is represented in font:

	"0"	Binary	Hex
	****	11110000	0xF0
	*  *	10010000	0x90
	*  *	10010000	0x90
	*  *	10010000	0x90
	****	11110000	0xF0

	*/
	static constexpr BYTE font[] = {
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};

	CHIP8(const char* path);
	void LoadFromBuffer(BYTE* buffer);
	void Cycle();

};